{"version":3,"sources":["helpers/apiConnect.js","helpers/controllers.js","components/Form.jsx","App.js","index.js"],"names":["axios","create","baseURL","timeout","headers","getData","a","get","res","data","console","log","addSteps","steps","post","err","Form","handleClick","useState","count","setCount","className","htmlFor","type","id","placeholder","onChange","e","target","value","onClick","preventDefault","App","setData","fetchData","useEffect","dateFormatter","item","moment","format","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","YAxis","Tooltip","labelFormatter","Legend","Bar","fill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,8CACTC,QAAS,IACTC,QAAS,CAAE,eAAgB,sBCHvBC,EAAO,uCAAG,4BAAAC,EAAA,+EAEIN,EAAMO,IAAI,UAFd,cAERC,EAFQ,yBAGLA,EAAIC,MAHC,gCAKZC,QAAQC,IAAR,MALY,yDAAH,qDASPC,EAAQ,uCAAG,WAAOC,GAAP,SAAAP,EAAA,sDACf,IACEN,EAAMc,KAAK,aAAc,CAAED,UAC3B,MAAOE,GACPL,QAAQC,IAAII,GAJC,2CAAH,sD,QCkBCC,MA3Bf,YAAgC,IAAhBC,EAAe,EAAfA,YAAe,EACHC,mBAAS,GADN,mBACtBC,EADsB,KACfC,EADe,KAG7B,OACE,uBAAMC,UAAU,sBAAhB,UACE,uBAAOC,QAAQ,aAAf,yBACA,uBACED,UAAU,eACVE,KAAK,SACLC,GAAG,aACHC,YAAY,wBACZC,SAAU,SAACC,GAAD,OAAOP,EAASO,EAAEC,OAAOC,UAErC,wBACER,UAAU,uBACVE,KAAK,SACLO,QAAS,SAACH,GACRA,EAAEI,iBACFd,EAAYE,IALhB,2B,wFC2DSa,MA1Df,WAAgB,IAAD,EACWd,mBAAS,IADpB,mBACNT,EADM,KACAwB,EADA,KAGPC,EAAS,uCAAG,4BAAA5B,EAAA,+EAEED,IAFF,OAEVG,EAFU,OAGdyB,EAAQzB,GAHM,gDAKdE,QAAQC,IAAR,MALc,yDAAH,qDASTM,EAAW,uCAAG,WAAOJ,GAAP,SAAAP,EAAA,+EAEVM,EAASC,GAFC,OAGhBqB,IAHgB,+CAKhBxB,QAAQC,IAAR,MALgB,wDAAH,sDASjBwB,qBAAU,WACRD,MACC,CAACzB,IAEJC,QAAQC,IAAIF,GAEZ,IAAM2B,EAAgB,SAACC,GAAD,OAAUC,IAAOD,GAAME,OAAO,eAEpD,OACE,sBAAKlB,UAAU,MAAf,UACE,0DACA,cAAC,EAAD,CAAMJ,YAAaA,IAEnB,cAACuB,EAAA,EAAD,CAAqBC,MAAO,IAAKC,OAAQ,IAAKrB,UAAU,QAAxD,SACE,eAACsB,EAAA,EAAD,CACEF,MAAO,IACPC,OAAQ,IACRjC,KAAMA,EACNmC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOC,cAAejB,IACrC,cAACkB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAASC,eAAgBpB,IACzB,cAACqB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKN,QAAQ,QAAQO,KAAK,qBC9DpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb1ec00d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://steps-counter-backend.herokuapp.com\",\r\n  timeout: 10000,\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n});\r\n","import axios from \"./apiConnect\";\r\n\r\nconst getData = async () => {\r\n  try {\r\n    let res = await axios.get(\"/steps\");\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst addSteps = async (steps) => {\r\n  try {\r\n    axios.post(\"/steps/add\", { steps });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport { getData, addSteps };\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Form({ handleClick }) {\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <form className=\"text-left mt-4 ml-4\">\r\n      <label htmlFor=\"stepsCount\">Steps Count</label>\r\n      <input\r\n        className=\"form-control\"\r\n        type=\"number\"\r\n        id=\"stepsCount\"\r\n        placeholder=\"Enter the steps count\"\r\n        onChange={(e) => setCount(e.target.value)}\r\n      />\r\n      <button\r\n        className=\"btn btn-primary mt-4\"\r\n        type=\"submit\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          handleClick(count);\r\n        }}\r\n      >\r\n        Add Steps\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { addSteps, getData } from \"./helpers/controllers\";\nimport Form from \"./components/Form\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport moment from \"moment\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      let res = await getData();\n      setData(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleClick = async (steps) => {\n    try {\n      await addSteps(steps);\n      fetchData();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [data]);\n\n  console.log(data);\n\n  const dateFormatter = (item) => moment(item).format(\"DD-MMMM-YY\");\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Steps Counter</h1>\n      <Form handleClick={handleClick} />\n      {/* Chart */}\n      <ResponsiveContainer width={800} height={500} className=\"chart\">\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" tickFormatter={dateFormatter} />\n          <YAxis />\n          <Tooltip labelFormatter={dateFormatter} />\n          <Legend />\n          <Bar dataKey=\"steps\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}